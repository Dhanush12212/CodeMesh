Frontend (React + Monaco Editor + Socket.io + WebRTC)


1️⃣ Initialize React App
Run npm create vite@latest my-editor-app --template react
Install dependencies:
monaco-editor (VS Code-like editor)
socket.io-client (WebSocket for real-time updates)
react-router-dom (Navigation)
axios (API calls) 

2️⃣ Setup Routing
Install react-router-dom.
Create pages/components:
Home.js → Enter or create a room.
Editor.js → The main code editor.
Login.js & Register.js → Authentication (optional).
Configure App.js with Routes.

3️⃣ Implement Authentication (Optional)
Create login & register forms.
Store JWT in localStorage after successful login.

4️⃣ Implement Code Collaboration Features
Integrate MonacoEditor in Editor.js.
Connect socket.io-client to the WebSocket server.
Sync code in real time across connected users.
Implement live cursor tracking to show where others are editing.

5️⃣ Setup API Calls with Axios
POST /api/auth/register → User signup.
POST /api/auth/login → User login.
GET /api/rooms → Fetch available rooms.
POST /api/rooms/create → Create a new coding room.

7️⃣ Run the Frontend
Start the React app with npm run dev.
